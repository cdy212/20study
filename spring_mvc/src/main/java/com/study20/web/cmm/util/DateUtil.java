package com.study20.web.cmm.util;import java.sql.Timestamp;import java.text.ParsePosition;import java.text.SimpleDateFormat;import java.util.Calendar;import java.util.Date;import java.util.Locale;/** * 날짜   * @category 유틸  * @author chajaesung */public class DateUtil {	// 년월일시분초	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yyyyMMddhhmmss	 * 예제 : 20101122102100	 * </pre> 	 */	public static final String YYYYMMDDHHMISS		    = "yyyyMMddHHmmss";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yyyy-MM-dd hh:mm:ss	 * 예제 : 2010-11-22 10:21:00	 * </pre> 	 */		public static final String YYYY_MM_DD_HH_MI_SS 		= "yyyy-MM-dd HH:mm:ss";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yyyy-MM-dd hh:mm:ss	 * 예제 : 2010년11월22일 10시21분00초	 * </pre> 	 */	public static final String YYYY_MM_DD_HH_MI_SS_KO	= "yyyy년MM월dd일 HH시mm분ss초";		// 년월일시분	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yyyyMMddhhmm	 * 예제 : 201011221021	 * </pre> 	 */	public static final String YYYYMMDDHHMI 			= "yyyyMMddHHmm";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yyyy-MM-dd hh:mm	 * 예제 : 2010-11-22 10:21	 * </pre> 	 */	public static final String YYYY_MM_DD_HH_MI	    	= "yyyy-MM-dd HH:mm";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yyyy년MM월dd일 hh시mm분	 * 예제 : 2010년11월22일 10시21분	 * </pre> 	 */	public static final String YYYY_MM_DD_HH_MI_KO 		= "yyyy년MM월dd일 HH시mm분";	// 년월일	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yyyyMMdd	 * 예제 : 20101122	 * </pre> 	 */	public static final String YYYYMMDD      			= "yyyyMMdd";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yyyy-MM-dd	 * 예제 : 2010-11-22	 * </pre> 	 */	public static final String YYYY_MM_DD    			= "yyyy-MM-dd";			public static final String YYYY_MM_DD2				= "yyyy.MM.dd";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yyyy년MM월dd일	 * 예제 : 2010년11월22일	 * </pre> 	 */	public static final String YYYY_MM_DD_KO 			= "yyyy년MM월dd일";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yy-MM-dd	 * 예제 : 10-11-22	 * </pre> 	 */	public static final String YY_MM_DD      			= "yy-MM-dd";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yy년MM월dd일	 * 예제 : 10년11월22일	 * </pre> 	 */	public static final String YY_MM_DD_KO   			= "yy년MM월dd일";	// 년 단위	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yy	 * 예제 : 10	 *  </pre>	 */	public static final String YY            			= "yy";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yyyy	 * 예제 : 2010	 *  </pre>	 */		public static final String YYYY          			= "yyyy";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : yyyy	 * 예제 : 2010	 *  </pre>	 */	public static final String YYYY_KO					= "yyyy년";	// 월 단위	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : MM	 * 예제 : 11	 *  </pre>	 */	public static final String MM            			= "MM";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : MM월	 * 예제 : 11월	 *  </pre>	 */	public static final String MM_KO					= "MM월";	// 일 단위	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : dd	 * 예제 : 22	 *  </pre>	 */	public static final String DD            			= "dd";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : dd일	 * 예제 : 22일	 *  </pre>	 */	public static final String DD_KO					= "dd일";	// 시 단위	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : hh	 * 예제 : 10	 *  </pre>	 */	public static final String HH 				 		= "HH";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : hh시	 * 예제 : 10시	 *  </pre>	 */	public static final String HH_KO 			 		= "HH시";	// 분 단위	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : mm	 * 예제 : 21	 *  </pre>	 */	public static final String MI 				 		= "mm";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : mm분	 * 예제 : 21분	 *  </pre>	 */	public static final String MI_KO 			 		= "mm분";	// 초 단위	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : ss	 * 예제 : 00	 *  </pre>	 */	public static final String SS 			 			= "ss";	/**	 * @author jwlee0208	 * <pre>	 * 포맷 : ss초	 * 예제 : 00초	 *  </pre>	 */	public static final String SS_KO 		 			= "ss초";	/**	 * <pre>	 * 1. MethodName    : getLong	 * 2. ClassName     : DateUtil	 * 3. Comment       : calendar객체의 값을 long타입으로 변환	 * 4. 작성일          : 2013. 11. 22. 오전 10:41	 * 5. 사용 예         : Calendar cal = Calendar.getInstance();	 *                    DateUtil.getLong(cal);	 * 6. 리턴 데이터 예    : 1385085797923(13자리) 	 * </pre>	 * @author jwlee0208	 * @param cal	 * @return	 */	public static long getLong(Calendar cal){		return getLong(cal.getTime());		}		/**	 * <pre>	 * 1. MethodName    : getLong	 * 2. ClassName     : DateUtil	 * 3. Comment       : calendar객체의 값을 long타입으로 변환	 * 4. 작성일          : 2013. 11. 22. 오전 10:41	 * 5. 사용 예         : Date currentTime = new Date ();			 *                    DateUtil.getLong(currentTime);	 * 6. 리턴 데이터 예    : 1385085542191(13자리)	 * </pre>	 * @param date	 * @return	 */	public static long getLong(Date date) {		return date.getTime();	}	/**	 * <pre>	 * 1. MethodName    : getLong13Byte	 * 2. ClassName     : DateUtil	 * 3. Comment       : 전달받은 long 타입의 데이터를 13자리의 long 데이터로 리턴	 * 4. 작성일          : 2013. 11. 22. 오후 12:09	 * 5. 사용 예         : Calendar cal = Calendar.getInstance();	 *                    DateUtil.getLong13Byte(getLong(cal));	 * 6. 리턴 데이터 예    : 1385089458229(13자리)	 * </pre>	 * @author jwlee0208	 * @param val	 * @return	 */	public static long getLong13Byte(long val) {		return (String.valueOf(val).length() == 13) ? val : val*1000;	}	/**	 * <pre>	 * 1. MethodName    : convertToString	 * 2. ClassName     : DateUtil	 * 3. Comment       : timestamp값을 String형값으로 변환	 * 4. 작성일          : 2013. 11. 21. 오후 15:07	 * 5. 사용 예         : DateUtil.convertToString(1385082000, YYYY_MM_DD_HH_MI_SS_KO);	 * 6. 리턴 데이터 예    : 2013년11월22일 10시00분00초	 * </pre>	 * @author jwlee0208	 * @param time	 * @param dateFormat	 * @return	 * @throws Exception	 */	public static String convertToString(long time, String dateFormat) throws Exception{		if(dateFormat == null || dateFormat == "")			dateFormat = YYYY_MM_DD_HH_MI_SS;		SimpleDateFormat sdf = new SimpleDateFormat(dateFormat, Locale.KOREA);		Date date = new Date(getLong13Byte(time));				return sdf.format(date);	}	/**	 * <pre>	 * 1. MethodName    : convertToDate	 * 2. ClassName     : DateUtil	 * 3. Comment       : yyyy-MM-dd hh:mm:ss 형식의 일자를 표현하는 String값을 Date type으로 변환	 * 4. 작성일          : 2013. 11. 21. 오후 16:23	 * 5. 사용 예         : DateUtil.convertToDate("2013-11-22 10:00:00");	 * 6. 리턴 데이터 예    : Fri Nov 22 10:00:00 KST 2013	 * </pre>	 * @author jwlee0208	 * @param dateStr	 * @return	 * @throws Exception	 */		public static Date convertToDate(String dateStr) throws Exception{		if (dateStr == null || dateStr == "")			return null;				SimpleDateFormat sdf = new SimpleDateFormat(YYYY_MM_DD_HH_MI_SS, Locale.KOREA);		return sdf.parse(dateStr);	}	/**	 * <pre>	 * 1. MethodName    : convertToDate	 * 2. ClassName     : DateUtil	 * 3. Comment       : yyyy-MM-dd hh:mm:ss 형식의 일자를 표현하는 String값을 Date type으로 변환	 * 4. 작성일          : 2013. 11. 21. 오후 16:23	 * 5. 사용 예         : DateUtil.convertToDate("2013-11-22 10:00:00", YYYY_MM_DD);	 * 6. 리턴 데이터 예    : Fri Nov 22 00:00:00 KST 2013	 * </pre>	 * @author jwlee0208	 * @param dateStr	 * @param dateFormat	 * @return	 * @throws Exception	 */			public static Date convertToDate(String dateStr, String dateFormat) throws Exception{		if(dateStr == null || dateStr =="")			return null;				Date inputDate = convertToDate(dateStr);		if(dateFormat == null || dateFormat == "")			dateFormat = YYYY_MM_DD_HH_MI_SS;				// 변환할 dateFormat		SimpleDateFormat convertSdf = new SimpleDateFormat(dateFormat, Locale.KOREA);				return convertSdf.parse(convertSdf.format(inputDate.getTime()));	}	/**	 * <pre>	 * 1. MethodName    : convertToLong	 * 2. ClassName     : DateUtil	 * 3. Comment       : yyyy-MM-dd hh:mm:ss 형식의 일자를 표현하는 String값을 long type으로 변환	 * 4. 작성일          : 2013. 11. 21. 오후 16:23	 * 5. 사용 예         : DateUtil.convertStringToLongtime("2013-11-22 10:00:00");	 * 6. 리턴 데이터 예    : 1385082000000(13자리) 	 * </pre>	 * @author jwlee0208	 * @param dateStr	 * @return	 * @throws Exception	 */	public static long convertToLong(String dateStr) throws Exception{		return convertToDate(dateStr).getTime();	}	/**	 * <pre>	 * 1. MethodName    : convertToString	 * 2. ClassName     : DateUtil	 * 3. Comment       : long type의 날짜값을 String형값으로 변환	 * 4. 작성일          : 2013. 11. 21. 오후 15:07	 * 5. 사용 예         : DateUtil.convertTime(1385082000);	 * 6. 리턴 데이터 예    : 2013-11-22 10:00:00	 	 * </pre>	 * @param time	 * @return	 * @throws Exception	 */	public static String convertToString(long time) throws Exception{		return convertToString(time, null);	}		/**	 * <pre>	 * 1. MethodName    : convertToTimestamp	 * 2. ClassName     : DateUtil	 * 3. Comment       : yyyy-MM-dd hh:mm:ss 형식의 일자를 표현하는 String값을 timestamp type으로 변환	 * 4. 작성일          : 2013. 11. 21. 오후 15:07	 * 5. 사용 예         : DateUtil.convertToTimestamp("2013-11-22 10:00:00")	 * 6. 리턴 데이터 예    : 2013-11-22 10:00:00.0	 * </pre>	 * @author jwlee0208	 * @param dateStr	 * @return	 * @throws Exception	 */		public static Timestamp convertToTimestamp(String dateStr) throws Exception{		return new Timestamp(convertToDate(dateStr).getTime());	}		/**	 * <pre>	 * 1. MethodName    : convertToTimestamp	 * 2. ClassName     : DateUtil	 * 3. Comment       : yyyy-MM-dd hh:mm:ss 형식의 일자를 표현하는 String값을 timestamp type으로 변환	 * 4. 작성일          : 2013. 11. 22. 오후 12:23	 * 5. 사용 예         : DateUtil.convertToTimestamp("2013-11-22 10:00:00", YYYY_MM_DD);	 * 6. 리턴 데이터 예    : 2013-11-22 00:00:00.0	 * </pre>	 * @author jwlee0208	 * @param dateStr	 * @param dateFormat	 * @return	 * @throws Exception	 */	public static Timestamp convertToTimestamp(String dateStr, String dateFormat) throws Exception{		return new Timestamp(convertToDate(dateStr, dateFormat).getTime());	}	/**	 * <pre>	 * 1. MethodName    : durationDays	 * 2. ClassName     : DateUtil	 * 3. Comment       : 기준일과 최종일까지의 기간(일)을 조회하는데 사용.	 * 4. 작성일          : 2013. 11. 22. 오후 12:23	 * 5. 사용 예         : // 기준 일 설정	 *                    Calendar cal = Calendar.getInstance(Locale.KOREA);	 *                    // 최종 일 설정	 *                    Calendar afterCal = Calendar.getInstance(Locale.KOREA);	 *                    // 기준 일로부터 한달 후의 일자를 설정	 *                    afterCal.add(Calendar.MONTH, 1);	 *                    durationDays(cal, afterCal);	 * 6. 리턴 데이터 예    : 30	 * </pre>	 * @param src	 * @param dest	 * @return	 */	public static int durationDays(Calendar src, Calendar dest) {		int duration = 0;		src.set(Calendar.HOUR, 0);		src.set(Calendar.MINUTE, 0);		src.set(Calendar.SECOND, 0);		src.set(Calendar.MILLISECOND, 0);		dest.set(Calendar.HOUR, 0);		dest.set(Calendar.MINUTE, 0);		dest.set(Calendar.SECOND, 0);		dest.set(Calendar.MILLISECOND, 0);		long srcm = getLong(src);		long destm = getLong(dest);		long mili_per_day = 1000 * 60 * 60 * 24;		if (srcm < destm) {			duration = (int) ((destm - srcm) / mili_per_day);		}		return duration;	}	/**	 * <pre>	 * 1. MethodName    : getLastDay	 * 2. ClassName     : DateUtil	 * 3. Comment       : 년월일 일자가 문자열로 되어있는 값으로 해당 월의 마지막 일자를 조회할 때 사용. 	 * 4. 작성일          : 2013. 11. 22. 오후 12:23	 * 5. 사용 예         : 1) DataUtil.getLastDay("2013-12-22 10:00:00");	 *                    2) DateUtil.getLastDay("2013-12-22");	 * 6. 리턴 데이터 예    : 31 (12월의 마지막 일자)	 * </pre>	 * @author jwlee0208	 * @param strDate	 * @return	 * @throws Exception	 */	public static int getLastDay(String strDate) throws Exception {		String[] strs = strDate.split("-");		Calendar cal = Calendar.getInstance();		cal.set(Calendar.YEAR, Integer.parseInt(strs[0]));		cal.set(Calendar.MONTH, Integer.parseInt(strs[1])-1);				return cal.getActualMaximum(Calendar.DAY_OF_MONTH); 	}	/**	 * <pre>	 * 1. MethodName    : convertToCalendar	 * 2. ClassName     : DateUtil	 * 3. Comment       : Date형의 날짜 정보을 Calendar형으로 변환	 * 4. 작성일          : 2013. 11. 22. 오후 15:27	 * 5. 사용 예         : Date date = new Date();	 *                    DateUtil.convertToCalendar(date);	 * 6. 리턴 데이터 예    : java.util.GregorianCalendar[time=1385101341908,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Seoul",offset=32400000,dstSavings=0,useDaylight=false,transitions=14,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=326,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=3,HOUR_OF_DAY=15,MINUTE=22,SECOND=21,MILLISECOND=908,ZONE_OFFSET=32400000,DST_OFFSET=0]	 * </pre>	 * @author jwlee0208	 * @param date	 * @return	 * @throws Exception	 */	public static Calendar convertToCalendar(Date date) throws Exception{		Calendar cal = Calendar.getInstance(Locale.KOREA);		cal.setTime(date);		return cal;			}	/**	 * <pre>	 * 1. MethodName    : convertToCalendar	 * 2. ClassName     : DateUtil	 * 3. Comment       : String 형의 날짜 정보을 Calendar형으로 변환	 * 4. 작성일          : 2013. 11. 22. 오후 15:27	 * 5. 사용 예         : DateUtil.convertToCalendar("2013-11-22 10:00:00");	 * 6. 리턴 데이터 예    : java.util.GregorianCalendar[time=1385082000000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Seoul",offset=32400000,dstSavings=0,useDaylight=false,transitions=14,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=326,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=32400000,DST_OFFSET=0]	 * </pre>	 * @author jwlee0208	 * @param date	 * @return	 * @throws Exception	 */	public static Calendar convertToCalendar(String dateStr) throws Exception{		if(dateStr == null || dateStr == "")			return null;		return convertToCalendar(convertToDate(dateStr));	}	/**	 * <pre>	 * 1. MethodName    : convertToCalendar	 * 2. ClassName     : DateUtil	 * 3. Comment       : long 형의 날짜 정보을 Calendar형으로 변환	 * 4. 작성일          : 2013. 11. 22. 오후 15:27	 * 5. 사용 예         : DateUtil.convertToCalendar(1385082000);					// 10자리	 *                    DateUtil.convertToCalendar(getLong13Byte(1385082000));		// 13자리	 * 6. 리턴 데이터 예    : java.util.GregorianCalendar[time=1385082000000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Seoul",offset=32400000,dstSavings=0,useDaylight=false,transitions=14,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=326,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=32400000,DST_OFFSET=0]	 * </pre>	 * @author jwlee0208	 * @param date	 * @return	 * @throws Exception	 */	public static Calendar convertToCalender(long date) throws Exception{		return convertToCalendar(convertToString(getLong13Byte(date)));	}		/**   	 *  Term이 있는 날짜 반환   	 *     	 *  2달 전 날짜 getMyDate(-2, "yyyy-MM-dd");   	 *  3달 후 날짜 getMyDate(3, "yyyy-MM-dd");   	 *     	 * @author Evan   	 * @param int term : 기간(월단위)   	 * @param String format : 날짜포맷   	 * @return String    	 */	public static String getMyDate(int term, String format) {		return getMyDate(term, format, "M");	}		/**   	 *  Term이 있는 날짜 반환   	 *     	 *  2달 전 날짜 getMyDate(-2, "yyyy-MM-dd");   	 *  3달 후 날짜 getMyDate(3, "yyyy-MM-dd");   	 *     	 * @author Evan   	 * @param int term : 기간(월단위)   	 * @param String format : 날짜포맷   	 * @param String gubun : 월(M)   	 * @return String    	 */	public static String getMyDate(int term, String format, String gubun) {		Calendar now = Calendar.getInstance();				if ("Y".equals(gubun)){			now.set(now.get(Calendar.YEAR) + term, now.get(Calendar.MONTH), now.get(Calendar.DAY_OF_MONTH));		}		else if ("M".equals(gubun)){			now.set(now.get(Calendar.YEAR), now.get(Calendar.MONTH)+term, now.get(Calendar.DAY_OF_MONTH));		}		else {			now.set(now.get(Calendar.YEAR), now.get(Calendar.MONTH), now.get(Calendar.DAY_OF_MONTH)+term);		}				SimpleDateFormat simpledf = new SimpleDateFormat(format);		return simpledf.format(now.getTime());	}		/**   	 *  입력된 패에 맞게 오늘 날짜 반환   	 *     	 *  String time = DateTime.getFormatString("yyyy-MM-dd HH:mm:ss");   	 *     	 * @author Evan   	 * @param String pattern : "yyyy, MM, dd, HH, mm, ss and more"   	 * @return String : 입력된 포맷에 맞게 오늘 날짜 반환   	 */	public static String getFormatString(String pattern) {		SimpleDateFormat formatter = new SimpleDateFormat(pattern, 		                                                   Locale.KOREA);		String dateString = formatter.format(getDate());		return dateString;	}	@SuppressWarnings("deprecation")	public static String getFormatString(String sDate, String pattern){		Date date =  new Date(Integer.parseInt(sDate.substring(0,4))-1900, Integer.parseInt(sDate.substring(4,6))-1, Integer.parseInt(sDate.substring(6)));;		SimpleDateFormat formatter = new SimpleDateFormat(pattern,                 Locale.KOREA);		String dateString = formatter.format(date);		return dateString;	}		/**   	 * 오늘 날짜를 Date형식으로 반환한다.   	 * @author Evan   	 * @return Date : 날짜   	 */	public static Date getDate(){    	Date date = new Date();    	return date;    }		/**   	 * 오늘 날짜를 가지고 온다   	 * @author Evan   	 * @return String : yyyyMMdd   	 */	public static String getToday() {        return getToday(YYYYMMDD);    }		/**   	 * 데이터 포멧에 맞춰 오늘 날짜를 가지고 온다   	 * ex)   	 * DateUtil.getToday("yyyy-MM-dd-HH-mm-ss");   	 * @author cdy   	 * @param dateFormat    	 * @return 데이터 포멧에 따라 틀림   	 */	public static String getToday(String dateFormat) {        Date date = getDate();    	        SimpleDateFormat simpledateformat =         	new SimpleDateFormat(dateFormat, new Locale("ko", "KOREA"));        	        return simpledateformat.format(date);    }		/**   	 * 오늘 달의 전달의 첫번째 일자를 구한다.   	 * @author Evan   	 * @return String : yyyyMMdd   	 */	public static String getBeforeFirstDay() {    	return getBeforeFirstDay(getToday());    }		/**   	 * 입력 달의 전달의 첫번째 일자를 구한다.   	 * @author Evan   	 * @param sToday : 입력달    	 * @return String : yyyyMMdd   	 */	public static String getBeforeFirstDay(String sToday) {        String s = getBeforeMonth(sToday);        return s.substring(0, 6) + "01";	}		/**   	 * 현재 달의 전달의 날자를 가지고 온다.   	 * 오늘 날자가 2002년 01월 14일 경우   	 * 반환값은 2001년 12월 14일이 된다.   	 * @author Evan   	 * @return String : yyyyMMdd   	 */	public static String getBeforeMonth() {	   	return getBeforeMonth(getToday());	}		/**   	 * 입력 달의 전달의 날자를 가지고 온다.   	 * @author Evan   	 * @param s : 입력달(yyyymmdd)   	 * @return String : yyyyMMdd   	 */	public static String getBeforeMonth(String s) {        String s1 = null;        int i = Integer.parseInt(s.substring(0, 4));        String s2 = String.valueOf(i);        int j = Integer.parseInt(s.substring(4, 6)) - 1;        String s3 = String.valueOf(j);               if (j == 0) {            i--;            s3 = "12";            s2 = String.valueOf(i);        }                if (s3.length() == 1)            s3 = "0" + s3;                    s1 = s2 + s3 + s.substring(6);        return s1;    }		/**   	 * 현재 달의 다음달의 날자를 가지고 온다.   	 * 오늘 날자가 2002년 12월 14일 경우   	 * 반환값은 2003년 01월 14일이 된다.   	 * @author Evan   	 * @return String : yyyyMMdd   	 */	public static String getNextMonth() {        return getNextMonth(getToday());    }		/**   	 * 입력 달의 다음달의 날자를 가지고 온다.   	 * @author Evan   	 * @param s : 입력달(yyyymmdd)   	 * @return String : yyyyMMdd   	 */	public static String getNextMonth(String s) {        String s1 = null;        int i = Integer.parseInt(s.substring(0, 4));        String s2 = String.valueOf(i);        int j = Integer.parseInt(s.substring(4, 6)) +1;        String s3 = String.valueOf(j);                if (j == 13) {            i++;            s3 = "01";            s2 = String.valueOf(i);        }                if (s3.length() == 1)            s3 = "0" + s3;                    s1 = s2 + s3 + s.substring(6);        return s1;    }			/**   	 * 날짜가 유효한지 체크   	 * @author Evan   	 * @param int i : 년   	 * @param int j : 월   	 * @param int k : 일   	 * @return Integer   	 */	protected static Integer[] getValidateDate(int i, int j, int k) {        Integer ainteger[] = new Integer[3];        ainteger[0] = new Integer(i);        ainteger[1] = new Integer(j);        ainteger[2] = new Integer(k);        if(i < 0)            return ainteger;                int l = getMonthDateCount(i, j, k);                if(k <= 0) {            if(--j < 0) {                j = 11;                i--;            }            k = getMonthDateCount(i, j, 1) + k;            ainteger = getValidateDate(i, j, k);        }        else if(k > l) {            k -= getMonthDateCount(i, j, 1);                        if(++j > 11) {                j = 0;                i++;            }            ainteger = getValidateDate(i, j, k);        }        return ainteger;    }		/**   	 * 그 년도의 달 마직막 일자를 가지고 온다.   	 * @author Evan   	 * @param int i : 년   	 * @param int j : 월   	 * @param int k : 일   	 * @return int : 그 달의 마지막 일자   	 */	@SuppressWarnings("deprecation")	protected static int getMonthDateCount(int i, int j, int k) {        Date date = getDate();        Date date1 = getDate();        date.setYear(i);        date.setMonth(j);        date.setDate(1);                int l  = date.getDay();        int j1 = i;        int k1 = j + 1;        if(k1 == 12)         {            k1 = 0;            j1++;        }                date1.setYear(j1);        date1.setMonth(k1);        date1.setDate(1);                int i1 = date1.getDay();        byte byte0;        switch((i1 - l) % 7) {	        case 0: // '\0'	            byte0 = 28;	            break;	        case 1: // '\001'	            byte0 = 29;	            break;	        case 2: // '\002'	            byte0 = 30;	            break;	        default:	            byte0 = 31;	            break;        }                return byte0;    }		/**   	 * 그 년도의 달 마직막 일자를 가지고 온다.   	 * @author Evan   	 * @param String s : 년월일   	 * @return int : 그 달의 마지막 일자   	 */	public static int getMonthDateCount(String s) {        int i = 0;        int j = 0;        int k = 1;                try {            i = Integer.parseInt(s.substring(0, 4)) - 1900;            j = Integer.parseInt(s.substring(4, 6)) - 1;            k = Integer.parseInt(s.substring(6, 8));        }        catch(Exception _ex) { }                return getMonthDateCount(i, j, k);    }		/**   	 * 해당 년에 대한 달의 마지막 일자를 구한다.   	 * @author Evan   	 * @param int i : 년   	 * @param int j : 월   	 * @return int : 마지막 일자   	 */	public static int getDayCount(int i, int j) {        int ai[] = {            31, 28, 31, 30, 31, 30, 31, 31, 30, 31,             30, 31        };                if(i % 4 == 0 && j == 2)            return 29;        else            return ai[j - 1];    }		/**   	 * 그 달의 마직막 일자를 가지고 온다.   	 * @author Evan   	 * @param String s : 년월   	 * @return int : 그 달의 마지막 일자   	 */	public static int getDayCount(String s) {        int i = 0;        int j = 0;        try {            i = Integer.parseInt(s.substring(0, 4));            j = Integer.parseInt(s.substring(4, 6));        }        catch(Exception _ex) { }                return getDayCount(i, j);    }		/**	 * 현제 시간과 비교하여 차이를 String 값으로 리턴	 * ex)	 * String compairTime = "2013-12-03-16-10-22";	 * String dataFormat = "yyyy-MM-dd-HH-mm-ss";	 * DateUtil.diffTimeToString(loginTime, dataFormat);	 * @author CDY	 * @param compairTime : 비교 시간	 * @param dataFormat :데이터 포멧	 * @return 00:10 - 시 : 분	 * 	 */	public static String diffTimeToString(String compairTime, String dataFormat) {		SimpleDateFormat sf=new SimpleDateFormat(dataFormat);		Date startday=sf.parse(compairTime, new ParsePosition(0));		long startTime=startday.getTime();		//현재의 시간 설정			Calendar cal=Calendar.getInstance();		Date endDate=cal.getTime();		long endTime=endDate.getTime();		long mills=endTime-startTime;					//분으로 변환		long min=mills/60000;				long hour = min/60;//시간		min = min%60;//분				StringBuffer diffTime=new StringBuffer();		diffTime.append( hour<10?"0"+hour:hour).append(":").append(min<10?"0"+min:min );				return diffTime.toString();	}		/**	 * 오늘날짜 기준으로 해당 날짜를 더한 날짜를 리턴	 * ex)	 * int iDay = 7;	 * DateUtil.getAddDate(-1)	 * @author snut97	 * @param iDay : 더해질 일자	 * @return yyyy-MM-dd	 */	public static String getAddDate (int iDay ) 	{		Calendar temp=Calendar.getInstance ( );				temp.add ( Calendar.DAY_OF_MONTH, iDay );				java.util.Date currentTime = temp.getTime();		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");		String ndate = formatter.format(currentTime);				return ndate;	}	/**	 * 오늘날짜 기준으로 해당 월을 더한 날짜를 리턴	 * ex)	 * int iMonth = 1;	 * DateUtil.getAddDateMonth(-2);	 * @author snut97	 * @param iMonth : 더해질 월	 * @return yyyy-MM-dd	 */	public static String getAddDateMonth (int iMonth ) 	{		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");		Calendar temp=Calendar.getInstance ( );		temp.add(Calendar.MONTH, iMonth);		java.util.Date currentTime = temp.getTime();		String ndate = formatter.format(currentTime);		return ndate;	}	}